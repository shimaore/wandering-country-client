// Generated by CoffeeScript 1.12.7
(function() {
  var PouchDB, debug, get_client_db, seem;

  seem = require('seem');

  debug = (require('debug'))('wandering-country-client:db');

  PouchDB = require('pouchdb-core').plugin(require('pouchdb-adapter-http')).plugin(require('pouchdb-mapreduce'));

  module.exports = get_client_db = seem(function*(ev) {
    var db, db_name, location, ref, user, user_db;
    debug('Loading…');
    location = function(name) {
      return [window.location.protocol, '//', window.location.host, '/', name].join('');
    };
    db = null;
    if (((ref = this.cfg) != null ? ref.db : void 0) != null) {
      debug('Using database', this.cfg.db);
      db = new PouchDB(this.cfg.db);
      user_db = function(name) {
        return new PouchDB(name);
      };
      ev.one('user-data', function(data) {
        debug('trigger database-name');
        return ev.trigger('database-name', 'test');
      });
    } else {
      debug('Waiting for user-data…');
      user = (yield new Promise(function(resolve) {
        ev.one('user-data', function(data) {
          debug('Received user-data', data);
          return resolve(data);
        });
        return ev.trigger('get-user-data');
      }));
      user_db = function(name) {
        return new PouchDB(location(name));
      };
      if (user.admin) {
        db_name = 'provisioning';
      } else {
        debug('Waiting for database-ready…');
        db_name = (yield new Promise(function(resolve) {
          ev.one('database-ready', function(db) {
            return resolve(db);
          });
          return ev.trigger('user-provisioning');
        }));
      }
      debug('Database is', db_name);
      db = user_db(db_name);
      ev.trigger('database-name', db_name);
    }
    return {
      db: db,
      user_db: user_db
    };
  });

}).call(this);
